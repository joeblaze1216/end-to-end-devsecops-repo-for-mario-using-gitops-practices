name: "Run SAST, Build and push supermario image, scan image, and update deployment"

on:
  push:
    branches:
      - main

env:
  VERSION: latest

jobs:
  sonarqube_sast_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.projectKey=joeblaze1216_devsecops-dotnet-github-actions-end-to-end-assignment
            -Dsonar.organization=joeblaze1216

  build_push_supermario_docker_image:
    runs-on: ubuntu-latest
    needs: sonarqube_sast_scan

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image (linux/amd64)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: puthurjohnny/supermarioproj:${{ env.VERSION }}
          platforms: linux/amd64

  run_container_image_scan_on_supermario_docker_image:
    runs-on: ubuntu-latest
    needs: build_push_supermario_docker_image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull and Save Docker Image
        run: |
          docker pull puthurjohnny/supermarioproj:${{ env.VERSION }}
          docker save -o ${{ github.workspace }}/supermariolatestdockerimage.tar puthurjohnny/supermarioproj:${{ env.VERSION }}

      - name: Run Trivy vulnerability scanner in tarball mode
        uses: aquasecurity/trivy-action@master
        with:
          input: ${{ github.workspace }}/supermariolatestdockerimage.tar
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

  update_k8s_yaml_version_file_with_latest_image_tag:
    runs-on: ubuntu-latest
    needs: run_container_image_scan_on_supermario_docker_image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Git Config
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USERNAME }}"

      - name: Update Deployment YAML and Version File
        run: |
          git pull
          sed -i "s|image: puthurjohnny/supermarioproj:.*$|image: puthurjohnny/supermarioproj:${{ env.VERSION }}|" deployment.yaml
          echo "${{ env.VERSION }}" > version.txt
          git add deployment.yaml version.txt
          git commit -m "Updated deployment yaml and version.txt with tag ${VERSION}"
          git push
